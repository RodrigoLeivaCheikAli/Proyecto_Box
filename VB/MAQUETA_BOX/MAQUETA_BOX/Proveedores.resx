<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DataGridViewImageColumn1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAjCAYAAAAAEIPqAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAnNJREFUWEfFmL9O21AUxvMIPIIl21JG6BPwApWY6QArWyZUIeN46kgzdQQmJgTM
        7cBWMQETbA0SQ5obt5dQCQQIzDnJiWTKEfePj8Mn/QZHzrmfT46/2LchoSjpzUfrgxawH6d5N0oHGigI
        DZ8fhsnvTpj0F4JWd4a+Nn3h4mT0sGTQinBdbQWfewGVmo6ws3GqsKOsKVumYp66+5Uz4EsIFx+vqVla
        QlYjw6k64RaWIEzzJVpKRmhYYhxMiBrHVOAWqQW4X2hZf0XpnzZbvCZwxoOW9o/FJtzZXOHagZudLLgr
        TvrbbNE3mPuSF5s/b4qjX/fF7vHt6Jg7z4RXFPp2eWVnWJS1unfNnmciTFSHrNjLp8vI6t4/sjuWr2lA
        O8+2b8QJmsZ/zGWyY1aVG1DUdFttkSWzwiRf4IrYIGkaOCFLZkVpP2MKWCFsWpMlsyDgO0yBF3w/uysu
        9eMrhrdPZHcsPObOs41DsmQW3IRvJsfi5hVZqqaP3zRbv0yQWea1qdNSpj9BHa5+GbJk1uiNhCkw4QP8
        rGe9B/Znv/5vPPCYO++oe1/Mb/xl65ewn+kY8pEpYMW7pUcT5ogpYIVsTuf2OY2CEbngCpkQNe3yj4iC
        L3lltaRp52ePZqa9RkTKtPNoTBS13fc0pEwH0DSy4Sbqdnm3yAjGIcYZ8uP8zibWXuHd5YlMmS0NvJF3
        vbtcls+Y+BJnWmbjBq58BgrWtlEzwTniTKL5rm+HSdpwWTBzxsdWF3CGo2xQfYPGJHw2oX1o1ogt+MaN
        o0dlpyM/87nGR1+RhKiiOFOz42jsH0SpOn1hcvQMo07RKF5k9c42Gs+L5nHEwg6O6wAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="btnCargar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qKDxEtcAAAAASUVORK5CYII=
</value>
  </data>
</root>